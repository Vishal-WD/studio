
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    // Admins can manage all users. Users can only read their own data.
    match /users/{userId} {
      allow read: if isAuth() && (isOwner(userId) || isAdmin());
      allow write: if isAdmin(); // create, update, delete
    }

    // Posts collection
    // Authenticated users can read posts from their department.
    // Users can only create/delete their own posts.
    match /posts/{postId} {
       allow read: if isAuth();
       allow create: if isAuth() && request.resource.data.authorId == request.auth.uid;
       allow delete: if isAuth() && resource.data.authorId == request.auth.uid;
    }
    
    // Clubs collection
    // Any authenticated user can read clubs.
    // Only admins can create clubs.
    // Only admins or the assigned club incharge can update a club.
    match /clubs/{clubId} {
      allow read: if isAuth();
      allow create: if isAdmin();
      allow update: if isAuth() && (isAdmin() || request.auth.uid in get(/databases/$(database)/documents/users/$(resource.data.officials.inchargeStaffId)).data.uid);
      // Delete rule can be added here if needed
    }
  }
}

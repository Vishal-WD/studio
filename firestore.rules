rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    // Helper function to check if the user is a staff member allowed to post
    function isStaff() {
      // Accessing user data from the 'users' collection
      let userData = getUserData(request.auth.uid);
      return userData.designation in ['dean', 'hod', 'club_incharge'];
    }

    match /users/{userId} {
      // Admins can read/write any user document
      allow read, write: if getUserData(request.auth.uid).role == 'admin';
      // Users can only read their own document
      allow read: if request.auth.uid == userId;
    }

    match /posts/{postId} {
      // Any authenticated user can read posts
      allow read: if request.auth != null;
      
      // Only authorized staff can create posts, and they must be the author.
      // This rule was simplified to fix the "endless posting" issue.
      allow create: if isStaff() && request.resource.data.authorId == request.auth.uid;
        
      // A user can only delete their own posts
      allow delete: if request.auth.uid == resource.data.authorId;
    }
  }
}


rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Check if the requesting user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // Admins can list all users.
      allow list: if isAdmin();

      // An admin can perform any action on any user. A regular user can only affect their own document.
      allow read, update, delete: if isAdmin() || request.auth.uid == userId;
      
      // An admin can create a user document.
      allow create: if isAdmin();
    }
    
    match /posts/{postId} {
      allow read: if request.auth != null;
      
      // Admins can write anything. Users can create/delete their own posts.
      allow write: if isAdmin() || (request.auth.uid == resource.data.authorId);
    }
    
    match /events/{eventId} {
      allow read: if request.auth != null;
      
      // Admins can write anything. Users can create/delete their own events.
      allow write: if isAdmin() || (request.auth.uid == resource.data.authorId);
    }

    match /resources/{resourceId} {
      // Allow a user to read a resource if they are in the same department. Admins can read all.
      allow read: if isAdmin() || (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == resource.data.department);

      // Admins can write anything. HODs/Deans can manage resources for their own department.
      allow write: if isAdmin() || (
        request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == request.resource.data.department
      );
    }
  }
}

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      // Admins can list all users.
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // An admin can perform any action on any user. A regular user can only affect their own document.
      allow read, update, delete: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || request.auth.uid == userId);
      
      // An admin can create a user document.
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /posts/{postId} {
      allow read: if request.auth != null;
      
      // Allow users to create posts if the authorId matches their own UID.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      
      // Allow admins to update any post. Allow users to delete their own post.
      allow update, delete: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' 
        || request.auth.uid == resource.data.authorId
      );
    }
    
    match /events/{eventId} {
      allow read: if request.auth != null;
      
      // Allow faculty or admins to create events.
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['faculty', 'admin'];

      // Allow admins to update/delete any event. Allow users to delete their own event.
      allow update, delete: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' 
        || request.auth.uid == resource.data.authorId
      );
    }

    match /resources/{resourceId} {
      // Allow a user to read a resource if they are in the same department.
      allow read: if request.auth != null 
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == resource.data.department;

      // Allow write if user is dean/hod for their department, OR if the user is an admin.
      allow write: if request.auth != null && (
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']
          && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == request.resource.data.department
        ) || (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
        )
      );
    }
  }
}

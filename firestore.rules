rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow read, update, delete: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || request.auth.uid == userId);
      allow create: if request.auth != null;
    }
    
    match /posts/{postId} {
      // Allow any authenticated user to read posts. 
      // The client-side queries are responsible for filtering which posts a user sees.
      allow read: if request.auth != null;
      
      // Allow create if user is an Admin, Dean, or HOD, and they are the author.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']);

      // Only the author of a post can delete it.
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['faculty', 'admin'];
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

    match /resources/{resourceId} {
      allow read: if request.auth != null 
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == resource.data.department;
      allow create, update: if request.auth != null 
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == request.resource.data.department;
      allow delete: if request.auth != null 
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == resource.data.department;
    }
  }
}

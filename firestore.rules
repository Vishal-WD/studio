
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // USERS collection
    match /users/{userId} {
      // Admins can read/write any user document
      // Users can only read/write their own document
      allow read, write: if isAuthenticated() && (isAdmin() || request.auth.uid == userId);
    }
    
    // CLUBS collection
    match /clubs/{clubId} {
      // Any authenticated user can read clubs
      allow read: if isAuthenticated();
      // Any authenticated user can create a club
      allow create: if isAuthenticated();
      // Only admins or the assigned club incharge can update a club
      allow update: if isAuthenticated() && (isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.staffId == resource.data.officials.inchargeStaffId);
    }

    // POSTS collection
    match /posts/{postId} {
      // A user can read a post if they are in the same department
      allow read: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == resource.data.authorDepartment;
      // Allow users to create posts if they are authenticated
      allow create: if isAuthenticated();
      // Allow users to delete a post only if they are the author
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.authorId;
    }
  }
}

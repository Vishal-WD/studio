rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Check if the requesting user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isFaculty() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'faculty';
    }

    match /users/{userId} {
      // Admins can list all users.
      allow list: if isAdmin();

      // An admin can perform any action on any user. A regular user can only affect their own document.
      allow read, update, delete: if isAdmin() || request.auth.uid == userId;
      
      // An admin can create a user document.
      allow create: if isAdmin();
    }
    
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      
      // For creating a new post
      allow create: if isAdmin() || (request.auth.uid == request.resource.data.authorId && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']);

      // For updating or deleting an existing post
      allow update, delete: if isAdmin() || (request.auth.uid == resource.data.authorId);
    }
    
    match /events/{eventId} {
      allow read: if request.auth != null;
      
      // Admins or faculty can create events. Author must match requesting user.
      allow create: if (isAdmin() || isFaculty()) && request.auth.uid == request.resource.data.authorId;

      // Admins or the original author can update or delete events.
      allow update, delete: if isAdmin() || (request.auth.uid == resource.data.authorId);
    }

    match /resources/{resourceId} {
      // Allow any authenticated user to read resources. Filtering is done client-side.
      allow read: if request.auth != null;

      // For creating a new resource
      allow create: if isAdmin() || (
        request.auth != null
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']
        // Check against the data being sent in the request
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == request.resource.data.department
      );

      // For updating or deleting an existing resource
      allow update, delete: if isAdmin() || (
        request.auth != null
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation in ['dean', 'hod']
        // Check against the data already in the database
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.department == resource.data.department
      );
    }
  }
}

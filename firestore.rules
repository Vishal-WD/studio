rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the user's data from the 'users' collection
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    match /users/{userId} {
      // Allow users to read their own data
      // Allow admins to read anyone's data
      allow read: if request.auth != null && (request.auth.uid == userId || getUserData(request.auth.uid).role == 'admin');
      
      // Allow admins to create, update, and delete user records
      allow write: if request.auth != null && getUserData(request.auth.uid).role == 'admin';
    }

    match /posts/{postId} {
      // To make this query work, you need to create a composite index in Firestore.
      // Go to your Firebase console -> Firestore Database -> Indexes -> Composite -> Add Index
      // Collection ID: posts
      // Fields to index: authorDepartment (Ascending), createdAt (Descending)
      // Query scope: Collection
      // Or use this link: https://console.firebase.google.com/v1/r/project/campus-790a5/firestore/indexes?create_composite=Ckpwcm9qZWN0cy9jYW1wdXMtNzkwYTUvZGF0YWJhc2VzLyhkZWZhdWx0KS9jb2xsZWN0aW9uR3JvdXBzL3Bvc3RzL2luZGV4ZXMvXxABChQKEGF1dGhvckRlcGFydG1lbnQQARoNCgljcmVhdGVkQXQQAhocChhfX25hbWVfXxAC
      
      // Allow reading a post if the user is authenticated and their department matches the post's department
      allow read: if request.auth != null && getUserData(request.auth.uid).department == resource.data.authorDepartment;
      
      // Allow creating a post if the user is authenticated
      allow create: if request.auth != null;

      // Allow deleting a post only if the user is the author of the post
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
      
      // Do not allow updates to posts for now
      allow update: if false;
    }
  }
}

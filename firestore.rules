rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is a staff member who can post
    function isStaff() {
      let designation = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation;
      return designation in ['dean', 'hod', 'club_incharge'];
    }

    match /users/{userId} {
      // Admins can read/write any user document.
      // Users can only read their own document.
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if isAdmin();
    }

    match /posts/{postId} {
      // Any authenticated user can read any post.
      allow read: if request.auth != null;

      // Users can create a post if they are staff.
      allow create: if request.auth != null && isStaff();

      // Users can only delete their own posts.
      allow delete: if request.auth.uid == resource.data.authorId;
      
      // Updating posts is not allowed for now.
      allow update: if false;
    }
  }
}
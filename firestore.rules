rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user is a faculty member or admin
    function isFacultyOrAdmin() {
        let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
        return userRole == 'faculty' || userRole == 'admin';
    }

    // Helper function to check if user has a specific designation (hod, dean)
    function hasDesignation(designation) {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation == designation;
    }
    
    // Helper function to check if a user is the author of a resource
    function isAuthor(resource) {
        return request.auth.uid == resource.data.authorId;
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read, create, and update any user document.
      // Users can only read their own document.
      allow read, create, update: if isAdmin() || request.auth.uid == userId;
      // Admins can delete any user (except themselves to be safe).
      allow delete: if isAdmin() && request.auth.uid != userId;
    }
    
    // Events Collection
    match /events/{eventId} {
        // Any authenticated user can read events.
        allow read: if request.auth.uid != null;
        // Only faculty or admins can create events.
        allow create: if isFacultyOrAdmin();
        // Only the original author or an admin can update/delete an event.
        allow update, delete: if isAdmin() || (isFacultyOrAdmin() && isAuthor(resource));
    }
    
    // Announcements Collection
    match /announcements/{announcementId} {
        // Any authenticated user can read announcements.
        allow read: if request.auth.uid != null;
        // Only HODs or Deans can create announcements.
        allow create: if hasDesignation('hod') || hasDesignation('dean');
        // Only the original author or an admin can update/delete.
        allow update, delete: if isAdmin() || isAuthor(resource);
    }
    
    // Resources Collection
    match /resources/{resourceId} {
        // Any authenticated user can read resources.
        allow read: if request.auth.uid != null;
        // Only HODs or Deans can create/update/delete resources.
        allow create, update, delete: if hasDesignation('hod') || hasDesignation('dean');
    }

    // QuickLinks Collection
    match /quicklinks/{linkId} {
        // Any authenticated user can read quick links.
        allow read: if request.auth.uid != null;
        // Only admins can create, update, or delete quick links.
        allow create, update, delete: if isAdmin();
    }
  }
}